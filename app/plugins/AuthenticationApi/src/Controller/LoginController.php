<?php

namespace AuthenticationApi\Controller;

use Authentication\Authenticator\UnauthenticatedException;
use Authentication\Controller\Component\AuthenticationComponent;
use AuthenticationApi\Dto\UserLoginRequest;
use Cake\Event\EventInterface;
use MixerApi\JwtAuth\JwtAuthenticatorInterface;
use SwaggerBake\Lib\Attribute\OpenApiDto;
use SwaggerBake\Lib\Attribute\OpenApiResponse;

/**
 * @property AuthenticationComponent $Authentication
 */
class LoginController extends AppController
{
    public function beforeFilter(EventInterface $event)
    {
        parent::beforeFilter($event); // TODO: Change the autogenerated stub
        $this->Authentication->allowUnauthenticated(['login']);
    }

    /**
     * User Authentication
     *
     * Identifies a user via login credentials and returns a JWT (JSON Web Token) as text/plain. If you've
     * run `bin/cake migrations seed` you should be able to log on using:
     *
     * username: test@example.com
     *
     * password: password
     *
     * @param JwtAuthenticatorInterface $jwtAuth
     * @return \Cake\Http\Response|null|void
     * @throws \Authentication\Authenticator\UnauthenticatedException
     */
    #[OpenApiDto(class: UserLoginRequest::class)]
    #[OpenApiResponse(mimeTypes: ['text/plain'])]
    public function login(JwtAuthenticatorInterface $jwtAuth)
    {
        try {
            return $this->response->withStringBody($jwtAuth->authenticate($this->Authentication));
        } catch (UnauthenticatedException $e) {
            return $this->response->withStringBody($e->getMessage())->withStatus(401);
        }
    }
}
